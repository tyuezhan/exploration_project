<launch>

  <arg name="mav_name" default="ddk1"/>

  <arg name="map_frame" default="$(arg mav_name)/odom"/>
  <arg name="robot_frame" default="$(arg mav_name)/base_link"/>

  <arg name="odom_topic" default="ground_truth/odom"/>

  <group ns="$(arg mav_name)">

    <node name="navigator" pkg="ddk_nav_2d" type="example_interface.py" output="screen" >
      <remap from="jps_plan_service" to="jps2d_plan_service"/>
      <remap from="odom" to="$(arg mav_name)/$(arg odom_topic)"/>

      <param name="goal_recheck" type="bool" value="true"/>
      <param name="min_recheck_period" type="double" value="10.0"/>

      <param name="server_wait_timeout" type="double" value="3.0"/>
      <param name="map_frame" type="string" value="$(arg map_frame)"/>
      <param name="robot_frame" type="string" value="$(arg robot_frame)"/>

      <!-- cell robot radius is used to clean the robot footprint in occupancy map -->
      <param name="cell_robot_radius" type="int" value="3"/>

      <!-- frequency means the frequency of the exploration while loop -->
      <param name="frequency" type="double" value="0.1"/>

      <!-- thredhold value of occupied cell in occupancy grid -->
      <!-- <param name="occupied_cell_threshold" type="int" value="1"/> -->

      <param name="map_inflation_radius" type="double" value="0.25"/>

      <param name="flight_height" type="double" value="1.2"/>

      <!-- Scan 1.0 meter for each frontier to find if there is obstacle-->
      <param name="obstacle_scan_range" type="double" value="1.0"/>

      <!-- Less than number of frontiers will be treated as complete -->
      <param name="goal_frontier_num_threshold" type="int" value="30" />

      <!-- Generate frontier that is at least distance away-->
      <param name="frontier_distance_threshold" type="double" value="0.5" />

      <param name="frontier_fov" type="double" value="120.0" />
      <param name="first_360_scan" type="bool" value="false" />

    </node>

  </group>

</launch>
